{"version":3,"sources":["images/cat.png","images/cow.png","images/dog.png","images/pig.png","images/rat.png","App.js","index.js"],"names":["module","exports","animalTypes","type","imageSrc","catImage","cowImage","dogImage","pigImage","ratImage","App","useState","name","setName","newAnimalInfo","setNewAnimalInfo","searchTerm","setSearchTerm","limitBy","setLimitBy","image","animals","setAnimals","className","onChange","ev","value","target","map","animalType","key","src","alt","checked","placeholder","onClick","newAnimal","filter","animal","includes","index","ReactDOM","render","document","getElementById"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,iC,kBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,wOCSrCC,EAAc,CAClB,CAACC,KAAM,MAAOC,SAAUC,KACxB,CAACF,KAAM,MAAOC,SAAUE,KACxB,CAACH,KAAM,MAAOC,SAAUG,KACxB,CAACJ,KAAM,MAAOC,SAAUI,KACxB,CAACL,KAAM,MAAOC,SAAUK,MAqHXC,MAlHf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAE6BF,mBAAS,IAFtC,mBAENG,EAFM,KAESC,EAFT,OAGuBJ,mBAAS,IAHhC,mBAGNK,EAHM,KAGMC,EAHN,OAIiBN,oBAAS,GAJ1B,mBAINO,EAJM,KAIGC,EAJH,OAKiBR,mBAAS,CACrC,CAACC,KAAM,WAAYQ,MAAOf,IAAUF,KAAM,SAN/B,mBAKNkB,EALM,KAKGC,EALH,KAyCb,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,wBAAIA,UAAU,aAAd,uBAEA,4CAEE,4BAAQC,SAhBhB,SAAyBC,GACvB,IAAMC,EAAQD,EAAGE,OAAOD,MAEtBP,EADY,QAAVO,GAGSD,EAAGE,OAAOD,SAYf,4BAAQA,MAAM,OAAd,OAIExB,EAAY0B,KAAI,SAAAC,GAAU,OACxB,4BAAQH,MAAOG,EAAW1B,KAAM2B,IAAKD,EAAW1B,MAC7C0B,EAAW1B,WAOtB,yCAEE,2BACEuB,MAAOV,EACPQ,SAAU,SAAAC,GAAE,OAAIR,EAAcQ,EAAGE,OAAOD,WAI5C,yBAAKK,IAAI,mCAAmCC,IAAI,SAElD,yBAAKT,UAAU,cACb,yBAAKA,UAAU,6BAEXrB,EAAY0B,KAAI,SAAAC,GAAU,OACxB,2BAAOC,IAAKD,EAAW1B,MACrB,2BACEA,KAAK,QACLuB,MAAOG,EAAW1B,KAClB8B,QAASnB,EAAcX,OAAS0B,EAAW1B,KAC3CqB,SAAU,kBAAMT,EAAiBc,MAEnC,yBAAKE,IAAKF,EAAWzB,SAAU4B,IAAI,gBAK3C,2BACIE,YAAY,mBACZR,MAAOd,EACPY,SAlFV,SAAsBC,GACpBZ,EAAQY,EAAGE,OAAOD,UAmFd,4BAAQS,QAhFd,WACE,IAAMC,EAAY,CAChBxB,KAAMA,EACNQ,MAAON,EAAcV,SACrBD,KAAMW,EAAcX,MAEtBmB,EAAW,GAAD,mBACLD,GADK,CAERe,OAwEE,eAGF,yBAAKb,UAAU,YAEXF,EACGgB,QAAO,SAAAC,GAAM,OAAgB,IAAZpB,GAAqBoB,EAAOnC,OAASe,KACtDmB,QAAO,SAAAC,GAAM,OAAIA,EAAO1B,KAAK2B,SAASvB,MAEtCY,KAAI,SAACU,EAAQE,GAAT,OACH,yBAAKjB,UAAU,SAASO,IAAKQ,EAAOnC,MAClC,yBAAK4B,IAAKO,EAAOlB,MAAOY,IAAI,WAC5B,2BAAIM,EAAO1B,KAAX,QAAsB0B,EAAOnC,aCnH7CsC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7266e59a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat.2d9a785c.png\";","module.exports = __webpack_public_path__ + \"static/media/cow.d67ef2a2.png\";","module.exports = __webpack_public_path__ + \"static/media/dog.7022ad4e.png\";","module.exports = __webpack_public_path__ + \"static/media/pig.af0d67e8.png\";","module.exports = __webpack_public_path__ + \"static/media/rat.f3c5a7bc.png\";","import React, { useState } from 'react';\nimport './App.css';\n\nimport catImage from './images/cat.png';\nimport cowImage from './images/cow.png';\nimport dogImage from './images/dog.png';\nimport pigImage from './images/pig.png';\nimport ratImage from './images/rat.png';\n\nconst animalTypes = [\n  {type: 'cat', imageSrc: catImage},\n  {type: 'cow', imageSrc: cowImage},\n  {type: 'dog', imageSrc: dogImage},\n  {type: 'pig', imageSrc: pigImage},\n  {type: 'rat', imageSrc: ratImage},\n];\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [newAnimalInfo, setNewAnimalInfo] = useState({});\n  const [searchTerm, setSearchTerm] = useState('');\n  const [limitBy, setLimitBy] = useState(false);\n  const [animals, setAnimals] = useState([\n    {name: 'whiskers', image: catImage, type: 'cat'},\n  ]);\n\n  function onNameChange(ev) {\n    setName(ev.target.value);\n  }\n\n  function addAnimal() {\n    const newAnimal = {\n      name: name,\n      image: newAnimalInfo.imageSrc,\n      type: newAnimalInfo.type,\n    };\n    setAnimals([\n      ...animals,\n      newAnimal,\n    ]);\n\n    // Another way to do it:\n    /*\n    const animalsCopy = animals.slice(); // Copies array\n    animalsCopy.push(newAnimal); // Add one to the end\n    setAnimals(animalsCopy);\n    */\n  }\n\n  function onLimitByChange(ev) {\n    const value = ev.target.value;\n    if (value === 'all') {\n      setLimitBy(false);\n    } else {\n      setLimitBy(ev.target.value);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App-title\">Petting Zoo Tracker</h1>\n\n        <label>\n          Only show:\n          <select onChange={onLimitByChange}>\n            <option value=\"all\">\n              All\n            </option>\n            {\n              animalTypes.map(animalType => (\n                <option value={animalType.type} key={animalType.type}>\n                  {animalType.type}\n                </option>\n              ))\n            }\n          </select>\n        </label>\n\n        <label>\n          Search:\n          <input\n            value={searchTerm}\n            onChange={ev => setSearchTerm(ev.target.value)}\n            />\n        </label>\n\n        <img src=\"https://i.imgur.com/HzafyBAb.jpg\" alt=\"cow\" />\n      </header>\n      <div className=\"AnimalForm\">\n        <div className=\"AnimalForm-animalSelector\">\n          {\n            animalTypes.map(animalType => (\n              <label key={animalType.type}>\n                <input\n                  type=\"radio\"\n                  value={animalType.type}\n                  checked={newAnimalInfo.type === animalType.type}\n                  onChange={() => setNewAnimalInfo(animalType)}\n                />\n                <img src={animalType.imageSrc} alt=\"Animal\" />\n              </label>\n            ))\n          }\n        </div>\n        <input\n            placeholder=\"Name your animal\"\n            value={name}\n            onChange={onNameChange}\n          />\n        <button onClick={addAnimal}>Add Animal</button>\n      </div>\n\n      <div className=\"App-body\">\n        {\n          animals\n            .filter(animal => limitBy === false || animal.type === limitBy)\n            .filter(animal => animal.name.includes(searchTerm))\n            /*.map(animal => (*/\n            .map((animal, index) => (\n              <div className=\"Animal\" key={animal.type}>\n                <img src={animal.image} alt=\"Animal\" />\n                <p>{animal.name} the {animal.type}</p>\n              </div>\n            ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Switch which of these is commented out to try out the Bonus Solution\n//import App from './AppBonusSolution';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
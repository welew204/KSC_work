{"version":3,"sources":["App.js","index.js"],"names":["App","useState","searchBox","setSearchBox","location","temperature","description","windSpeed","humidity","pressure","weatherResult","setWeatherResult","appClasses","desc","toLowerCase","includes","push","className","join","placeholder","value","onChange","ev","target","onClick","console","log","query","replace","fetch","then","response","json","data","main","name","Math","round","temp","weather","wind","speed","ReactDOM","render","document","getElementById"],"mappings":"kKAiGeA,MA5Ff,WAAgB,IAAD,EACqBC,mBAAS,eAD9B,mBACNC,EADM,KACKC,EADL,OAE6BF,mBAAS,CACjDG,SAAU,GACVC,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,SAAU,GACVC,SAAU,KARC,mBAENC,EAFM,KAESC,EAFT,KAgDPC,EAAa,CAAC,OACdC,GAAQH,EAAcJ,aAAe,IAAIQ,cAY/C,OAXID,EAAKE,SAAS,SAChBH,EAAWI,KAAK,cACPH,EAAKE,SAAS,SACvBH,EAAWI,KAAK,cACPH,EAAKE,SAAS,SACvBH,EAAWI,KAAK,cACPH,EAAKE,SAAS,SACvBH,EAAWI,KAAK,aAKhB,yBAAKC,UAAWL,EAAWM,KAAK,MAC9B,yBAAKD,UAAU,oBACb,yBAAKA,UAAU,6BACZP,EAAcN,UAEjB,yBAAKa,UAAU,6BACb,0BAAMA,UAAU,gCACbP,EAAcL,YADjB,QAC+B,oCAE/B,yBAAKY,UAAU,gCAAgCP,EAAcJ,cAE/D,yBAAKW,UAAU,4BACb,yBAAKA,UAAU,0BAAf,QACA,yBAAKA,UAAU,yBAAyBP,EAAcH,UAAtD,IAAiE,uCACjE,yBAAKU,UAAU,0BAAf,YACA,yBAAKA,UAAU,yBAAyBP,EAAcF,SAAtD,IAAgE,oCAChE,yBAAKS,UAAU,0BAAf,YACA,yBAAKA,UAAU,yBAAyBP,EAAcD,WAExD,yBAAKQ,UAAU,YACb,2BAAOE,YAAY,sBACjBC,MAAOlB,EACPmB,SA5CV,SAA2BC,GACzBnB,EAAamB,EAAGC,OAAOH,UA4CjB,4BAAQI,QA1EhB,WACEC,QAAQC,IAAI,kBAAmBxB,GAC/B,IAAMyB,EAAQzB,EAAU0B,QAAQ,KAAM,KAGtCC,MAFY,oDACVF,EAAQ,2CAEPG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJR,QAAQC,IAAI,iBAAkBO,GAEzBA,EAAKC,KAQVvB,EAAiB,CACfP,SAAU6B,EAAKE,KACf9B,YAAa+B,KAAKC,MAAMJ,EAAKC,KAAKI,KAAO,KACzChC,YAAa2B,EAAKM,QAAQ,GAAGL,KAC7B3B,UAAW6B,KAAKC,MAAMJ,EAAKO,KAAKC,OAChCjC,SAAU4B,KAAKC,MAAMJ,EAAKC,KAAK1B,UAC/BC,SAAU2B,KAAKC,MAAMJ,EAAKC,KAAKzB,YAb/BE,EAAiB,CACfP,SAAU,oBA8DZ,eCtFVsC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.b3f98baa.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n// Comment out this since we don't use it anymore:\n// import oaklandWeather from './oaklandweather.json';\n\nfunction App() {\n  const [searchBox, setSearchBox] = useState('Oakland, CA');\n  const [weatherResult, setWeatherResult] = useState({\n    location: '',\n    temperature: '',\n    description: '',\n    windSpeed: '',\n    humidity: '',\n    pressure: '',\n  });\n\n  function doFetch() {\n    console.log('hitting refresh', searchBox);\n    const query = searchBox.replace(/ /g, '+');\n    const url = 'http://api.openweathermap.org/data/2.5/weather?q=' +\n      query + '&appid=0de82b6b4ba5d843dac44bbee4d02543';\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        console.log('receiving data', data);\n\n        if (!data.main) {\n          setWeatherResult({\n            location: 'Not found.',\n          });\n          return; // Exit function prematurely\n        }\n\n        // Do state set for real data\n        setWeatherResult({\n          location: data.name,\n          temperature: Math.round(data.main.temp - 273),\n          description: data.weather[0].main,\n          windSpeed: Math.round(data.wind.speed),\n          humidity: Math.round(data.main.humidity),\n          pressure: Math.round(data.main.pressure),\n        });\n      });\n  }\n\n  function onSearchBoxChange(ev) {\n    setSearchBox(ev.target.value);\n  }\n\n  /////////////////////////////////////////////////////////////\n  // BONUS Solution\n  // Guess what type of weather this is so we can use the appropriate class to\n  // style the background conditionally based on the weather that we have\n  const appClasses = ['App'];\n  const desc = (weatherResult.description || '').toLowerCase();\n  if (desc.includes('clear')) {\n    appClasses.push('App--clear');\n  } else if (desc.includes('cloud')) {\n    appClasses.push('App--cloud');\n  } else if (desc.includes('storm')) {\n    appClasses.push('App--storm');\n  } else if (desc.includes('rain')) {\n    appClasses.push('App--rain');\n  }\n  /////////////////////////////////////////////////////////////\n\n  return (\n    <div className={appClasses.join(' ')}>\n      <div className=\"WeatherDashboard\">\n        <div className=\"WeatherDashboard-location\">\n          {weatherResult.location}\n        </div>\n        <div className=\"WeatherDashboard-overview\">\n          <span className=\"WeatherDashboard-temperature\">\n            {weatherResult.temperature}Â° <span>C</span>\n          </span>\n          <div className=\"WeatherDashboard-description\">{weatherResult.description}</div>\n        </div>\n        <div className=\"WeatherDashboard-details\">\n          <div className=\"WeatherDashboard-label\">Wind</div>\n          <div className=\"WeatherDashboard-data\">{weatherResult.windSpeed} <span>km/h</span></div>\n          <div className=\"WeatherDashboard-label\">Humidity</div>\n          <div className=\"WeatherDashboard-data\">{weatherResult.humidity} <span>%</span></div>\n          <div className=\"WeatherDashboard-label\">Pressure</div>\n          <div className=\"WeatherDashboard-data\">{weatherResult.pressure}</div>\n        </div>\n        <div className=\"Controls\">\n          <input placeholder=\"Enter location name\"\n            value={searchBox}\n            onChange={onSearchBoxChange} />\n          <button onClick={doFetch}>Refresh</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
{"version":3,"sources":["components/BoxSelector/BoxSelector.js","components/BookInfo/BookInfo.js","App.js","index.js"],"names":["BoxSelector","props","className","choices","map","choice","selectedValue","title","key","onClick","onSelectionChange","squareGotClicked","BookInfo","src","coverImage","alt","author","release","App","useState","selectedBook","setSelectedBook","bookData","setBookData","useEffect","fetch","then","response","json","data","console","log","Object","entries","name","info","releaseDate","cover","keys","newBookSelection","ReactDOM","render","document","getElementById"],"mappings":"wQA4CeA,MAxCf,SAAqBC,GAgBnB,OACE,yBAAKC,UAAU,eAEXD,EAAME,QAAQC,KAAI,SAAAC,GAAM,OACtB,yBACEH,UACEG,IAAWJ,EAAMK,cACf,2CACA,qBAEJC,MAAOF,EACPG,IAAKH,EACLI,QAAS,kBA1BnB,SAA0BJ,GAGpBA,IAAWJ,EAAMK,eACnBL,EAAMS,kBAAkBL,GAsBHM,CAAiBN,SAKtC,yBAAKH,UAAU,uBACZD,EAAMK,iB,MCxBAM,MAXf,SAAkBX,GAChB,OACE,yBAAKC,UAAU,YACb,yBAAKW,IAAKZ,EAAMa,WAAYC,IAAI,UAChC,4BAAKd,EAAMM,OACX,kCAAQN,EAAMe,QACd,4BAAKf,EAAMgB,WCmDFC,MAtDf,WAAgB,IAAD,EAC2BC,mBAAS,gBADpC,mBACNC,EADM,KACQC,EADR,OAEmBF,mBAAS,IAF5B,mBAENG,EAFM,KAEIC,EAFJ,KAyBb,OAFAC,qBAnBA,WAEEC,MAAM,gCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEJC,QAAQC,IAAI,qBACZD,QAAQC,IAAI,iBAAkBF,GAG9BN,EAAYM,QASC,IAGjB,yBAAK3B,UAAU,OACb,2DAGE8B,OAAOC,QAAQX,GAAUlB,KAAI,mCAAE8B,EAAF,KAAQC,EAAR,YAC3BD,IAASd,EACP,kBAAC,EAAD,CACEb,MAAO2B,EACP1B,IAAK0B,EACLlB,OAAQmB,EAAKnB,OACbC,QAASkB,EAAKC,YACdtB,WAAYqB,EAAKE,QAGnB,QAKN,kBAAC,EAAD,CACElC,QAAS6B,OAAOM,KAAKhB,GACrBhB,cAAec,EACfV,kBA9BN,SAA6B6B,GAC3BT,QAAQC,IAAI,eAAgBQ,GAC5BlB,EAAgBkB,QCpBpBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8680aeef.chunk.js","sourcesContent":["import React from 'react';\n\nimport './BoxSelector.css';\n\nfunction BoxSelector(props) {\n\n  function squareGotClicked(choice) {\n    // Only trigger an \"onSelectionChange\" event if its different than what is\n    // currently selected\n    if (choice !== props.selectedValue) {\n      props.onSelectionChange(choice);\n    }\n  }\n\n  // In function, we loop through using .map all the choices presented to this\n  // component. Each \"choice\" is a div with the class \"BoxSelector-square\". The\n  // ? : (ternary operator / \"if statement\") is used to selectively give the\n  // box that is \"checked\" or selected a different set of classes, specifically\n  // the class \"BoxSelector--selected\", which causes the \"filled in look\" and\n  // the animation of selecting it.\n  return (\n    <div className=\"BoxSelector\">\n      {\n        props.choices.map(choice => (\n          <div\n            className={\n              choice === props.selectedValue ?\n                \"BoxSelector-square BoxSelector--selected\" :\n                \"BoxSelector-square\"\n            }\n            title={choice}\n            key={choice}\n            onClick={() => squareGotClicked(choice)}\n          >\n          </div>\n        ))\n      }\n      <div className=\"BoxSelector-caption\">\n        {props.selectedValue}\n      </div>\n    </div>\n  );\n}\n\nexport default BoxSelector;\n","import React from 'react';\nimport './BookInfo.css';\n\nfunction BookInfo(props) {\n  return (\n    <div className=\"BookInfo\">\n      <img src={props.coverImage} alt=\"Cover\" />\n      <h2>{props.title}</h2>\n      <h2>by {props.author}</h2>\n      <h3>{props.release}</h3>\n    </div>\n  );\n}\n\nexport default BookInfo;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport BoxSelector from './components/BoxSelector/BoxSelector.js';\nimport BookInfo from './components/BookInfo/BookInfo.js';\n\nfunction App() {\n  const [selectedBook, setSelectedBook] = useState('Frankenstein');\n  const [bookData, setBookData] = useState({});\n\n  function doFetch() {\n    // Look in \"public\" for this JSON file\n    fetch('./data/book_information.json')\n      .then(response => response.json())\n      .then(data => {\n        // Got data back, console log the data we received\n        console.log('Fetch successful!');\n        console.log('Data received:', data);\n\n        // Do a setState to update the bookData object\n        setBookData(data);\n      });\n  }\n\n  function changeBookSelection(newBookSelection) {\n    console.log('Got clicked:', newBookSelection);\n    setSelectedBook(newBookSelection);\n  }\n\n  useEffect(doFetch, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Early Science Fiction Books</h1>\n\n      {\n        Object.entries(bookData).map(([name, info]) => (\n          name === selectedBook ? (\n            <BookInfo\n              title={name}\n              key={name}\n              author={info.author}\n              release={info.releaseDate}\n              coverImage={info.cover}\n            />\n          ) : (\n            null\n          )\n        ))\n      }\n\n      <BoxSelector\n        choices={Object.keys(bookData)}\n        selectedValue={selectedBook}\n        onSelectionChange={changeBookSelection}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import App from './App_Bonus';\n//import App from './App_AdvBonus';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
{"version":3,"sources":["components/Counter.js","index.js","reducers/index.js"],"names":["Counter","props","incrementAsync","bind","incrementIfOdd","this","value","onIncrement","setTimeout","onDecrement","onClick","Component","store","createStore","state","action","type","window","__REDUX_DEVTOOLS_EXTENSION__","rootEl","document","getElementById","render","ReactDOM","getState","dispatch","subscribe"],"mappings":"6NAoDeA,E,kDAhDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBAHL,E,6DAObE,KAAKJ,MAAMK,MAAQ,IAAM,GAC3BD,KAAKJ,MAAMM,gB,uCAKbC,WAAWH,KAAKJ,MAAMM,YAAa,O,+BAG3B,IAAD,EACqCF,KAAKJ,MAAzCK,EADD,EACCA,MAAOC,EADR,EACQA,YAAaE,EADrB,EACqBA,YAC5B,OACE,uCACYH,EADZ,SAEG,IACD,4BAAQI,QAASH,GAAjB,KAGC,IACD,4BAAQG,QAASD,GAAjB,KAGC,IACD,4BAAQC,QAASL,KAAKD,gBAAtB,oBAGC,IACD,4BAAQM,QAASL,KAAKH,gBAAtB,wB,GAnCcS,aCGhBC,EAAQC,aCNC,WAAwB,IAAvBC,EAAsB,uDAAd,EAAGC,EAAW,uCACpC,OAAQA,EAAOC,MACf,IAAK,YACH,OAAOF,EAAQ,EACjB,IAAK,YACH,OAAOA,EAAQ,EACjB,QACE,OAAOA,KDETG,OAAOC,8BAAgCD,OAAOC,gCAI1CC,EAASC,SAASC,eAAe,QAEjCC,EAAS,kBAAMC,IAASD,OAC5B,kBAAC,EAAD,CACEhB,MAAOM,EAAMY,WACbjB,YAAa,kBAAMK,EAAMa,SAAS,CAAET,KAAM,eAC1CP,YAAa,kBAAMG,EAAMa,SAAS,CAAET,KAAM,iBAE5CG,IAGFG,IACAV,EAAMc,UAAUJ,K","file":"static/js/main.da2c4b22.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.incrementAsync = this.incrementAsync.bind(this);\n    this.incrementIfOdd = this.incrementIfOdd.bind(this);\n  }\n\n  incrementIfOdd() {\n    if (this.props.value % 2 !== 0) {\n      this.props.onIncrement()\n    }\n  }\n\n  incrementAsync() {\n    setTimeout(this.props.onIncrement, 1000)\n  }\n\n  render() {\n    const { value, onIncrement, onDecrement } = this.props\n    return (\n      <p>\n        Clicked: {value} times\n        {' '}\n        <button onClick={onIncrement}>\n          +\n        </button>\n        {' '}\n        <button onClick={onDecrement}>\n          -\n        </button>\n        {' '}\n        <button onClick={this.incrementIfOdd}>\n          Increment if odd\n        </button>\n        {' '}\n        <button onClick={this.incrementAsync}>\n          Increment async\n        </button>\n      </p>\n    )\n  }\n}\n\nCounter.propTypes = {\n  value: PropTypes.number.isRequired,\n  onIncrement: PropTypes.func.isRequired,\n  onDecrement: PropTypes.func.isRequired\n}\n\nexport default Counter\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'redux'\nimport Counter from './components/Counter'\nimport counter from './reducers'\n\nconst store = createStore(\n  counter,\n  // modification required for REDUX_DEVTOOLS to work:\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  // (kinda annoying)\n);\n\nconst rootEl = document.getElementById('root')\n\nconst render = () => ReactDOM.render(\n  <Counter\n    value={store.getState()}\n    onIncrement={() => store.dispatch({ type: 'INCREMENT' })}\n    onDecrement={() => store.dispatch({ type: 'DECREMENT' })}\n  />,\n  rootEl\n)\n\nrender()\nstore.subscribe(render)\n","export default (state = 0, action) => {\n  switch (action.type) {\n  case 'INCREMENT':\n    return state + 1\n  case 'DECREMENT':\n    return state - 1\n  default:\n    return state\n  }\n}\n"],"sourceRoot":""}
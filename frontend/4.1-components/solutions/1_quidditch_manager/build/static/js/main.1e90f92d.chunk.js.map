{"version":3,"sources":["App.js","index.js"],"names":["chaserPlayers","players","filter","p","position","beaterPlayers","keeperPlayers","seekerPlayers","App","useState","availableChasers","setAvailableChasers","availableBeaters","setAvailableBeaters","availableKeepers","availableSeekers","chosenChasers","setChosenChasers","chosenBeaters","setChosenBeaters","chosenKeeper","setChosenKeeper","chosenSeeker","setChosenSeeker","className","src","alt","name","house","onClick","map","character","index","key","desiredKeeper","onChooseKeeper","onChooseSeeker","slice","removeChaser","onChooseChaser","removeBeater","onChooseBeater","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e90f92d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// Pull in player data from the players JSON file\nimport players from './players.json';\n\n// Uses filter to narrow down array into 4 individual player arrays, one for\n// each of the 4 Quidditch positions\nconst chaserPlayers = players.filter(p => p.position === 'Chaser');\nconst beaterPlayers = players.filter(p => p.position === 'Beater');\nconst keeperPlayers = players.filter(p => p.position === 'Keeper');\nconst seekerPlayers = players.filter(p => p.position === 'Seeker');\n\nfunction App() {\n\n  // Define \"pool\" of available characters\n  const [availableChasers, setAvailableChasers] = useState(chaserPlayers);\n  const [availableBeaters, setAvailableBeaters] = useState(beaterPlayers);\n\n  // NOTE: In this solution, we actually never remove keepers or seekers from\n  // the list of available ones.  This means we have no need of making these\n  // actually real state variables.  To avoid the warnings that accompany\n  // creating state variables that you never modify, we'll just set them as\n  // normal variables (gosh darn it, you win again React linter warnings!)\n  // const [availableKeepers, setAvailableKeepers] = useState(keeperPlayers);\n  // const [availableSeekers, setAvailableSeekers] = useState(seekerPlayers);\n  const availableKeepers = keeperPlayers;\n  const availableSeekers = seekerPlayers;\n\n  // Define which ones we'll be using for this team\n  const [chosenChasers, setChosenChasers] = useState([]);\n  const [chosenBeaters, setChosenBeaters] = useState([]);\n\n  // There is only one keeper and one seeker per team\n  const [chosenKeeper, setChosenKeeper] = useState(null);\n  const [chosenSeeker, setChosenSeeker] = useState(null);\n\n  function onChooseKeeper(index) {\n    // When they click on a \"chosen\" keeper, get the keeper that we want\n    // to use with the index provided, then do a setState\n    const desiredKeeper = availableKeepers[index];\n    setChosenKeeper(desiredKeeper);\n  }\n\n  function removeKeeper() {\n    setChosenKeeper(null); // Clear the chosen keeper\n  }\n\n  function onChooseSeeker(index) {\n    setChosenSeeker(availableSeekers[index]);\n  }\n\n  function removeSeeker() {\n    setChosenSeeker(null); // Clear the chosen seeker\n  }\n\n  function onChooseChaser(index) {\n    // Get the chosen chaser, and add to the end\n    const character = availableChasers[index];\n    setChosenChasers([\n      ...chosenChasers, // include existing chasers\n      character, // and the new one\n    ]);\n\n    // Remove the item at index from the array\n    setAvailableChasers([\n      ...availableChasers.slice(0, index), // include up to index\n      ...availableChasers.slice(index + 1), // and after index\n    ]);\n  }\n\n  function removeChaser(index) {\n    // Get the chaser and add to the end of available\n    const character = chosenChasers[index];\n    setAvailableChasers([\n      ...availableChasers, // include existing characters\n      character,           // and the new one\n    ]);\n\n    // Remove the item at index from the array\n    setChosenChasers([\n      ...chosenChasers.slice(0, index),  // include up to index\n      ...chosenChasers.slice(index + 1), // and after index\n    ]);\n  }\n\n\n  function onChooseBeater(index) {\n    // Get the chosen chaser, and add to the end\n    const character = availableBeaters[index];\n    setChosenBeaters([\n      ...chosenBeaters, // include existing chasers\n      character,        // and the new one\n    ]);\n\n    // Remove the item at index from the array\n    setAvailableBeaters([\n      ...availableBeaters.slice(0, index),  // include up to index\n      ...availableBeaters.slice(index + 1), // and after index\n    ]);\n  }\n\n  function removeBeater(index) {\n    // Get the beater and add to the end of available\n    const character = chosenBeaters[index];\n    setAvailableBeaters([\n      ...availableBeaters, // include existing characters\n      character,           // and the new one\n    ]);\n\n    // Remove the item at index from the array\n    setChosenBeaters([\n      ...chosenBeaters.slice(0, index),  // include up to index\n      ...chosenBeaters.slice(index + 1), // and after index\n    ]);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src=\"https://i.imgur.com/NrJQBLb.png\" alt=\"snitch\" />\n        <h1 className=\"App-title\">Quidditch Manager</h1>\n      </header>\n      <div className=\"TeamManager\">\n        <div className=\"TeamManager-position\">\n          <h2>Starting Keeper</h2>\n          {\n            chosenKeeper ? (\n              <div className=\"TeamManager-character\">\n                <h3>{chosenKeeper.name}</h3>\n                <h4>{chosenKeeper.house}</h4>\n                <button onClick={removeKeeper}>Remove</button>\n              </div>\n            ) : (\n              <em>None selected</em>\n            )\n          }\n        </div>\n\n        <div className=\"TeamManager-position\">\n          <h2>Roster (Keepers)</h2>\n          {\n            availableKeepers.map((character, index) => (\n              <div className=\"TeamManager-character\" key={index}>\n                <h3>{character.name}</h3>\n                <h4>{character.house}</h4>\n                <button onClick={() => onChooseKeeper(index)}>Choose</button>\n              </div>\n            ))\n          }\n        </div>\n\n        <div className=\"TeamManager-position\">\n          <h2>Starting Seeker</h2>\n          {\n            chosenSeeker ? (\n              <div className=\"TeamManager-character\">\n                <h3>{chosenSeeker.name}</h3>\n                <h4>{chosenSeeker.house}</h4>\n                <button onClick={removeSeeker}>Remove</button>\n              </div>\n            ) : (\n              <em>None selected</em>\n            )\n          }\n        </div>\n\n        <div className=\"TeamManager-position\">\n          <h2>Roster (Seekers)</h2>\n          {\n            availableSeekers.map((character, index) => (\n              <div className=\"TeamManager-character\" key={index}>\n                <h3>{character.name}</h3>\n                <h4>{character.house}</h4>\n                <button onClick={() => onChooseSeeker(index)}>Choose</button>\n              </div>\n            ))\n          }\n        </div>\n\n        <div className=\"TeamManager-position\">\n          <h2>Starting Chasers</h2>\n          {\n            chosenChasers.map((character, index) => (\n              <div className=\"TeamManager-character\" key={index}>\n                <h3>{character.name}</h3>\n                <h4>{character.house}</h4>\n                <button onClick={() => removeChaser(index)}>Remove</button>\n              </div>\n            ))\n          }\n        </div>\n\n        <div className=\"TeamManager-position\">\n          <h2>Roster (Chasers)</h2>\n          {\n            availableChasers.map((character, index) => (\n              <div className=\"TeamManager-character\" key={index}>\n                <h3>{character.name}</h3>\n                <h4>{character.house}</h4>\n                <button onClick={() => onChooseChaser(index)}>Choose</button>\n              </div>\n            ))\n          }\n        </div>\n\n        <div className=\"TeamManager-position\">\n          <h2>Starting Beaters</h2>\n          {\n            chosenBeaters.map((character, index) => (\n              <div className=\"TeamManager-character\" key={index}>\n                <h3>{character.name}</h3>\n                <h4>{character.house}</h4>\n                <button onClick={() => removeBeater(index)}>Remove</button>\n              </div>\n            ))\n          }\n        </div>\n\n        <div className=\"TeamManager-position\">\n          <h2>Roster (Beaters)</h2>\n          {\n            availableBeaters.map((character, index) => (\n              <div className=\"TeamManager-character\" key={index}>\n                <h3>{character.name}</h3>\n                <h4>{character.house}</h4>\n                <button onClick={() => onChooseBeater(index)}>Choose</button>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// Use this code to test out AppImproved\n// import AppImproved from './AppImproved';\n// ReactDOM.render(<AppImproved />, document.getElementById('root'));\n"],"sourceRoot":""}